//추가
buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	//querydsl 추가
//	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.java.basic'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	// 웹 의존성
    implementation 'org.springframework.boot:spring-boot-starter-web'

	//jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.session:spring-session-data-redis'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// swagger
	implementation "io.springfox:springfox-boot-starter:3.0.0"
//	implementation "io.springfox:springfox-swagger-ui:3.0.0"
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

	modules {
		module("io.swagger.core.v3:swagger-annotations") {
			replacedBy("io.swagger.core.v3:swagger-annotations-jakarta")
		}
	}

	//querydsl 설정 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'

	// rabbitMQ
	implementation 'org.springframework.boot:spring-boot-starter-amqp'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.compilerArgs << "-Xlint:deprecation"
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}